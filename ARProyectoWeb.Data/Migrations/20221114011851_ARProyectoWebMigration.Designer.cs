// <auto-generated />
using System;
using ARProyectoWeb.Data.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ARProyectoWeb.Data.Migrations
{
    [DbContext(typeof(DataBaseContext))]
    [Migration("20221114011851_ARProyectoWebMigration")]
    partial class ARProyectoWebMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ARProyectoWeb.Data.Models.Course", b =>
                {
                    b.Property<int>("CourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CourseId"), 1L, 1);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaFin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CourseId");

                    b.ToTable("Course");
                });

            modelBuilder.Entity("ARProyectoWeb.Data.Models.Task", b =>
                {
                    b.Property<int>("TaskId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TaskId"), 1L, 1);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("TaskId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Task");
                });

            modelBuilder.Entity("ARProyectoWeb.Data.Models.TaskCourse", b =>
                {
                    b.Property<int>("TaskCourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TaskCourseId"), 1L, 1);

                    b.Property<double>("CalificacionProfesor")
                        .HasColumnType("float");

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<int>("TaskId")
                        .HasColumnType("int");

                    b.HasKey("TaskCourseId");

                    b.HasIndex("CourseId");

                    b.HasIndex("TaskId");

                    b.ToTable("TaskCourse");
                });

            modelBuilder.Entity("ARProyectoWeb.Data.Models.TaskRate", b =>
                {
                    b.Property<int>("TaskRateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TaskRateId"), 1L, 1);

                    b.Property<double>("Calificacion")
                        .HasColumnType("float");

                    b.Property<double>("CalificacionUsuario")
                        .HasColumnType("float");

                    b.Property<int>("TaskCourseId")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("TaskRateId");

                    b.HasIndex("TaskCourseId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("TaskRate");
                });

            modelBuilder.Entity("ARProyectoWeb.Data.Models.Usuario", b =>
                {
                    b.Property<int>("UsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UsuarioId"), 1L, 1);

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Clave")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombres")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rol")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UsuarioId");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("ARProyectoWeb.Data.Models.UsuarioCourse", b =>
                {
                    b.Property<int>("UsuarioCourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UsuarioCourseId"), 1L, 1);

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("UsuarioCourseId");

                    b.HasIndex("CourseId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("UsuarioCourse");
                });

            modelBuilder.Entity("ARProyectoWeb.Data.Models.Task", b =>
                {
                    b.HasOne("ARProyectoWeb.Data.Models.Usuario", "UsuarioCreador")
                        .WithMany("TareasCreadas")
                        .HasForeignKey("UsuarioId")
                        .IsRequired();

                    b.Navigation("UsuarioCreador");
                });

            modelBuilder.Entity("ARProyectoWeb.Data.Models.TaskCourse", b =>
                {
                    b.HasOne("ARProyectoWeb.Data.Models.Course", "Curso")
                        .WithMany("TareasCurso")
                        .HasForeignKey("CourseId")
                        .IsRequired();

                    b.HasOne("ARProyectoWeb.Data.Models.Task", "Tarea")
                        .WithMany("CursosTarea")
                        .HasForeignKey("TaskId")
                        .IsRequired();

                    b.Navigation("Curso");

                    b.Navigation("Tarea");
                });

            modelBuilder.Entity("ARProyectoWeb.Data.Models.TaskRate", b =>
                {
                    b.HasOne("ARProyectoWeb.Data.Models.TaskCourse", "Tarea")
                        .WithMany("CalificacionesTarea")
                        .HasForeignKey("TaskCourseId")
                        .IsRequired();

                    b.HasOne("ARProyectoWeb.Data.Models.Usuario", "Estudiante")
                        .WithMany("CalificacionesEstudiante")
                        .HasForeignKey("UsuarioId")
                        .IsRequired();

                    b.Navigation("Estudiante");

                    b.Navigation("Tarea");
                });

            modelBuilder.Entity("ARProyectoWeb.Data.Models.UsuarioCourse", b =>
                {
                    b.HasOne("ARProyectoWeb.Data.Models.Course", "Curso")
                        .WithMany("Usuarios")
                        .HasForeignKey("CourseId")
                        .IsRequired();

                    b.HasOne("ARProyectoWeb.Data.Models.Usuario", "Usuario")
                        .WithMany("Cursos")
                        .HasForeignKey("UsuarioId")
                        .IsRequired();

                    b.Navigation("Curso");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ARProyectoWeb.Data.Models.Course", b =>
                {
                    b.Navigation("TareasCurso");

                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("ARProyectoWeb.Data.Models.Task", b =>
                {
                    b.Navigation("CursosTarea");
                });

            modelBuilder.Entity("ARProyectoWeb.Data.Models.TaskCourse", b =>
                {
                    b.Navigation("CalificacionesTarea");
                });

            modelBuilder.Entity("ARProyectoWeb.Data.Models.Usuario", b =>
                {
                    b.Navigation("CalificacionesEstudiante");

                    b.Navigation("Cursos");

                    b.Navigation("TareasCreadas");
                });
#pragma warning restore 612, 618
        }
    }
}
